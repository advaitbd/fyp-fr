import React, { useState } from "react";
import { Prism as SyntaxHighlighter } from "react-syntax-highlighter";
import { vscDarkPlus } from "react-syntax-highlighter/dist/esm/styles/prism";

const ExploitsPanel = ({ exploits }) => {
  const [selectedExploitIndex, setSelectedExploitIndex] = useState(null);
  const [activeTab, setActiveTab] = useState("plan");

  if (!exploits || exploits.length === 0) {
    return (
      <div className="bg-white p-6 rounded-lg shadow-md">
        <h2 className="text-xl font-semibold mb-4">Proof of Concepts</h2>
        <div className="p-4 text-center text-gray-500">
          No exploits generated
        </div>
      </div>
    );
  }

  const selectedExploit =
    selectedExploitIndex !== null ? exploits[selectedExploitIndex] : null;

  return (
    <div className="bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 border border-gray-100">
      <h2 className="text-xl font-semibold mb-4">Proof of Concepts</h2>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-4">
        {/* Exploit List */}
        <div className="lg:col-span-1 border rounded-md overflow-hidden">
          <div className="bg-gray-50 px-4 py-2 border-b">
            <h3 className="font-medium">Exploits ({exploits.length})</h3>
          </div>
          <div className="divide-y max-h-96 overflow-y-auto">
            {exploits.map((exploit, index) => {
              const vulnerability = exploit.vulnerability || {};
              const pocData = exploit.poc_data || {};
              const executionResults = pocData.execution_results || {};

              return (
                <div
                  key={index}
                  className={`px-4 py-3 cursor-pointer hover:bg-gray-50 ${selectedExploitIndex === index ? "bg-blue-50" : ""}`}
                  onClick={() => setSelectedExploitIndex(index)}
                >
                  <div className="flex justify-between items-center">
                    <span className="font-medium">
                      {vulnerability.vulnerability_type || "Unknown"}
                    </span>
                    {executionResults.success !== undefined && (
                      <span
                        className={`text-xs px-2 py-1 rounded-full ${
                          executionResults.success
                            ? "bg-green-100 text-green-800"
                            : "bg-red-100 text-red-800"
                        }`}
                      >
                        {executionResults.success ? "Success" : "Failed"}
                      </span>
                    )}
                  </div>
                  <div className="text-sm text-gray-500 truncate mt-1">
                    {pocData.exploit_file
                      ? pocData.exploit_file.split("/").pop()
                      : "No file"}
                  </div>
                </div>
              );
            })}
          </div>
        </div>

        {/* Exploit Details */}
        <div className="lg:col-span-2 border rounded-md">
          {selectedExploit ? (
            <div>
              <div className="bg-gray-50 px-4 py-2 border-b">
                <div className="flex items-center justify-between">
                  <h3 className="font-medium">
                    {selectedExploit.vulnerability?.vulnerability_type ||
                      "Exploit Details"}
                  </h3>
                  {selectedExploit.poc_data?.execution_results && (
                    <span
                      className={`text-xs px-2 py-1 rounded-full ${
                        selectedExploit.poc_data.execution_results.success
                          ? "bg-green-100 text-green-800 border border-green-300"
                          : "bg-red-100 text-red-800 border border-red-300"
                      }`}
                    >
                      {selectedExploit.poc_data.execution_results.success
                        ? "Execution Successful"
                        : "Execution Failed"}
                    </span>
                  )}
                </div>
              </div>

              <div>
                {/* Tabs */}
                <div className="border-b">
                  <nav className="flex">
                    <button
                      className={`px-4 py-2 text-sm font-medium ${
                        activeTab === "plan"
                          ? "border-b-2 border-blue-500 text-blue-600"
                          : "text-gray-500 hover:text-gray-700"
                      }`}
                      onClick={() => setActiveTab("plan")}
                    >
                      Exploit Plan
                    </button>
                    <button
                      className={`px-4 py-2 text-sm font-medium ${
                        activeTab === "code"
                          ? "border-b-2 border-blue-500 text-blue-600"
                          : "text-gray-500 hover:text-gray-700"
                      }`}
                      onClick={() => setActiveTab("code")}
                    >
                      PoC Code
                    </button>
                    {selectedExploit.poc_data?.execution_results && (
                      <button
                        className={`px-4 py-2 text-sm font-medium ${
                          activeTab === "results"
                            ? "border-b-2 border-blue-500 text-blue-600"
                            : "text-gray-500 hover:text-gray-700"
                        }`}
                        onClick={() => setActiveTab("results")}
                      >
                        Results
                      </button>
                    )}
                  </nav>
                </div>

                {/* Tab Content */}
                <div className="p-4 max-h-96 overflow-y-auto">
                  {activeTab === "plan" && (
                    <div className="space-y-4">
                      {/* Setup Steps */}
                      <div>
                        <h4 className="text-sm font-medium text-gray-700">
                          Setup Steps
                        </h4>
                        {selectedExploit.exploit_plan?.setup_steps?.length >
                        0 ? (
                          <ol className="list-decimal pl-5 text-sm text-gray-600 mt-1 space-y-1">
                            {selectedExploit.exploit_plan.setup_steps.map(
                              (step, idx) => (
                                <li key={idx}>{step}</li>
                              ),
                            )}
                          </ol>
                        ) : (
                          <p className="text-sm text-gray-500 mt-1">
                            No setup steps defined
                          </p>
                        )}
                      </div>

                      {/* Execution Steps */}
                      <div>
                        <h4 className="text-sm font-medium text-gray-700">
                          Execution Steps
                        </h4>
                        {selectedExploit.exploit_plan?.execution_steps?.length >
                        0 ? (
                          <ol className="list-decimal pl-5 text-sm text-gray-600 mt-1 space-y-1">
                            {selectedExploit.exploit_plan.execution_steps.map(
                              (step, idx) => (
                                <li key={idx}>{step}</li>
                              ),
                            )}
                          </ol>
                        ) : (
                          <p className="text-sm text-gray-500 mt-1">
                            No execution steps defined
                          </p>
                        )}
                      </div>

                      {/* Validation Steps */}
                      <div>
                        <h4 className="text-sm font-medium text-gray-700">
                          Validation Steps
                        </h4>
                        {selectedExploit.exploit_plan?.validation_steps
                          ?.length > 0 ? (
                          <ol className="list-decimal pl-5 text-sm text-gray-600 mt-1 space-y-1">
                            {selectedExploit.exploit_plan.validation_steps.map(
                              (step, idx) => (
                                <li key={idx}>{step}</li>
                              ),
                            )}
                          </ol>
                        ) : (
                          <p className="text-sm text-gray-500 mt-1">
                            No validation steps defined
                          </p>
                        )}
                      </div>
                    </div>
                  )}

                  {activeTab === "code" && (
                    <div>
                      <div className="flex justify-between mb-2">
                        <span className="text-sm text-gray-600">
                          {selectedExploit.poc_data?.exploit_file || "PoC Code"}
                        </span>
                        <div>
                          <button
                            className="text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded hover:bg-blue-200 mr-2"
                            onClick={() => {
                              if (selectedExploit.poc_data?.exploit_code) {
                                navigator.clipboard.writeText(
                                  selectedExploit.poc_data.exploit_code,
                                );
                              }
                            }}
                          >
                            Copy
                          </button>
                          {/* <a
                            href={`https://remix.ethereum.org/#code=${encodeURIComponent(selectedExploit.poc_data?.exploit_code || "")}`}
                            target="_blank"
                            rel="noreferrer"
                            className="text-xs bg-purple-100 text-purple-700 px-2 py-1 rounded hover:bg-purple-200"
                          >
                            Open in Remix
                          </a> */}
                        </div>
                      </div>

                      {selectedExploit.poc_data?.exploit_code ? (
                        <SyntaxHighlighter
                          language="solidity"
                          style={vscDarkPlus}
                          wrapLines={true}
                          showLineNumbers={true}
                          customStyle={{
                            margin: 0,
                            borderRadius: "0.375rem",
                            maxHeight: "400px",
                            boxShadow:
                              "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)",
                          }}
                        >
                          {selectedExploit.poc_data.exploit_code}
                        </SyntaxHighlighter>
                      ) : (
                        <div className="p-4 text-center text-gray-500 border rounded-md">
                          No code available
                        </div>
                      )}
                    </div>
                  )}

                  {activeTab === "results" &&
                    selectedExploit.poc_data?.execution_results && (
                      <div className="space-y-4">
                        <div>
                          <h4 className="text-sm font-medium text-gray-700">
                            Execution Status
                          </h4>
                          <p
                            className={`text-sm mt-1 ${
                              selectedExploit.poc_data.execution_results.success
                                ? "text-green-600"
                                : "text-red-600"
                            }`}
                          >
                            {selectedExploit.poc_data.execution_results.success
                              ? "Execution successful"
                              : `Execution failed: ${selectedExploit.poc_data.execution_results.error || "Unknown error"}`}
                          </p>
                        </div>

                        {selectedExploit.poc_data.execution_results.retries >
                          0 && (
                          <div>
                            <h4 className="text-sm font-medium text-gray-700">
                              Fix Attempts
                            </h4>
                            <p className="text-sm text-gray-600 mt-1">
                              {
                                selectedExploit.poc_data.execution_results
                                  .retries
                              }{" "}
                              fix attempt(s) made
                            </p>
                          </div>
                        )}

                        {selectedExploit.poc_data.execution_results.output && (
                          <div>
                            <h4 className="text-sm font-medium text-gray-700">
                              Output
                            </h4>
                            <pre className="text-xs bg-gray-100 p-2 rounded-md mt-1 overflow-x-auto">
                              {
                                selectedExploit.poc_data.execution_results
                                  .output
                              }
                            </pre>
                          </div>
                        )}

                        <div>
                          <h4 className="text-sm font-medium text-gray-700">
                            Execution Command
                          </h4>
                          <pre className="text-xs bg-gray-100 p-2 rounded-md mt-1 overflow-x-auto">
                            {selectedExploit.poc_data.execution_command ||
                              "N/A"}
                          </pre>
                        </div>
                      </div>
                    )}
                </div>
              </div>
            </div>
          ) : (
            <div className="p-6 text-center text-gray-500">
              Select an exploit to view details
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default ExploitsPanel;
