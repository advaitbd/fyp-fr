{
  "o3-mini-rag": {
    "data_structure_security": {
      "category": "data_structure_security",
      "file": "data_structure_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 3,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The report did not identify the key vulnerability from the ground truth (incorrect parsing of the internal second parameter as calldata in processRelease). Instead, it flagged other issues (a business logic vulnerability, a reentrancy concern, and an unchecked low-level call) that don't match the ground truth. Therefore, none of the vulnerabilities reported correctly match the true vulnerability, and the actual vulnerability was missed.",
      "evaluation_method": "llm"
    },
    "privacy_crypto_security": {
      "category": "privacy_crypto_security",
      "file": "privacy_crypto_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 2,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The ground truth identifies a collision attack that allows an attacker to claim all tokens; however, the report only identifies a low-confidence business_logic issue related to mutable merkle roots and a theoretical reentrancy risk. It does not detect the collision attack vulnerability at all, and the issues it does report are not the ones mentioned in the ground truth.",
      "evaluation_method": "llm"
    },
    "gas_security": {
      "category": "gas_security",
      "file": "gas_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 3,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The ground truth describes a DoS vulnerability caused by an unbounded loop that can run out of gas as the number of participants grows. The report, on the other hand, identifies three issues: a DoS based on token.transfer reversion by a malicious contract and two business logic concerns. None of these directly address the gas exhaustion risk from an unbounded loop. Therefore, while the report does note a DoS risk, it incorrectly characterizes its root cause and also adds unrelated vulnerabilities, meaning the key vulnerability in the ground truth was missed and false positives were introduced.",
      "evaluation_method": "llm"
    },
    "arithmetic_security": {
      "category": "arithmetic_security",
      "file": "arithmetic_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 3,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The report identifies three issues (oracle manipulation, denial of service with ETH refunds, and an inexact Taylor series for interest accrual) none of which correspond to the ground truth vulnerability. The ground truth concerns an unnecessary division by scale in the interest calculation (i.e., in the line calculating x) which is completely missed in the report. Thus, while the report raises other points that may or may not be valid, it does not capture the key vulnerability described in the ground truth.",
      "evaluation_method": "llm"
    },
    "access_control": {
      "category": "access_control",
      "file": "access_control.md",
      "has_errors": true,
      "true_positive": 2,
      "false_positive": 0,
      "false_negative": 0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "analysis": "The report correctly identifies that the lack of access control on the setOwner function is the core vulnerability, which matches the ground truth. Additionally, it explains how this vulnerability leads to broader issues in the voting logic (i.e., the ability to change proposals and deadlines), aligning with the description of affecting critical voting parameters. Therefore, all key vulnerability concepts from the ground truth are accurately captured.",
      "evaluation_method": "llm"
    },
    "cryptoeconomic_security": {
      "category": "cryptoeconomic_security",
      "file": "cryptoeconomic_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 4,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The ground truth vulnerability involves an attacker using a flashloan to manipulate the token price and then mint unlimited tokens. The report, however, focuses on issues in the flashLoan function (such as business logic and reentrancy) and an issue with the mint function regarding ETH management, none of which address the price manipulation aspect. As a result, all reported vulnerabilities are misidentified relative to the actual vulnerability, and the key vulnerability from the ground truth was completely missed.",
      "evaluation_method": "llm"
    },
    "boundary_condition": {
      "category": "boundary_condition",
      "file": "boundary_condition.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 2,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The report does not identify the self-transfer vulnerability in the _transfer function described in the ground truth. Instead, it reports two issues related to the approve function (front-running/approval race condition) that are common in ERC20 implementations. Thus, the key vulnerability from the ground truth was missed, and two unrelated vulnerabilities were incorrectly reported.",
      "evaluation_method": "llm"
    }
  },
  "o3-mini-no-rag": {
    "data_structure_security": {
      "category": "data_structure_security",
      "file": "data_structure_security.md",
      "has_errors": true,
      "true_positive": 1,
      "false_positive": 2,
      "false_negative": 0,
      "precision": 0.3333333333333333,
      "recall": 1.0,
      "f1_score": 0.5,
      "analysis": "The report correctly identifies the key vulnerability described in the ground truth\u2014the improper parsing of the second parameter in processRelease via inline assembly. However, it also lists two extra issues (a vesting schedule business logic concern and a reentrancy indication) that are not part of the ground truth.",
      "evaluation_method": "llm"
    },
    "privacy_crypto_security": {
      "category": "privacy_crypto_security",
      "file": "privacy_crypto_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 2,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The ground truth identifies a collision attack in the MerkleDrop which allows an attacker to claim all tokens, but the report does not mention any collision attack. Instead, it focuses on two other issues (improper business logic regarding merkleRoot updates and a DoS risk with large proofs). Thus, none of the vulnerabilities from the ground truth were correctly identified, while two vulnerabilities not present in the ground truth were reported.",
      "evaluation_method": "llm"
    },
    "gas_security": {
      "category": "gas_security",
      "file": "gas_security.md",
      "has_errors": true,
      "true_positive": 1,
      "false_positive": 3,
      "false_negative": 0,
      "precision": 0.25,
      "recall": 1.0,
      "f1_score": 0.4,
      "analysis": "The ground truth vulnerability is the unbounded loop in the distribute() function that may cause gas exhaustion and prevent token distribution (a DoS attack). The report does include this issue as Vulnerability #2. However, the report also identifies additional issues\u2014a DoS via malicious token.transfer reversion (Vulnerability #1) and two business logic flaws (Vulnerabilities #3 and #4)\u2014that are not mentioned in the ground truth. Thus, one correct vulnerability is identified but three extra ones are reported that do not match the ground truth.",
      "evaluation_method": "llm"
    },
    "arithmetic_security": {
      "category": "arithmetic_security",
      "file": "arithmetic_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 2,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The ground truth describes a simple arithmetic error in which an unnecessary division is performed in the interest calculation. However, the report instead highlights price manipulation and a denial-of-service issue as vulnerabilities, and its discussion of arithmetic only focuses on approximation errors in the Taylor series for exponential interest rather than the unnecessary division. Thus, none of the reported vulnerabilities match the ground truth, while two extraneous issues are reported and the key ground truth vulnerability is missed.",
      "evaluation_method": "llm"
    },
    "access_control": {
      "category": "access_control",
      "file": "access_control.md",
      "has_errors": true,
      "true_positive": 1,
      "false_positive": 1,
      "false_negative": 0,
      "precision": 0.5,
      "recall": 1.0,
      "f1_score": 0.6666666666666666,
      "analysis": "The report accurately identifies the main access control issue with the setOwner function and its impact on owner-restricted functionalities, matching the ground truth. However, it additionally reports a 'business_logic' vulnerability that is not present in the ground truth, which counts as a false positive.",
      "evaluation_method": "llm"
    },
    "cryptoeconomic_security": {
      "category": "cryptoeconomic_security",
      "file": "cryptoeconomic_security.md",
      "has_errors": true,
      "true_positive": 3,
      "false_positive": 3,
      "false_negative": 1,
      "precision": 0.5,
      "recall": 0.75,
      "f1_score": 0.6,
      "analysis": "The ground truth describes an attack in which an attacker uses flashloans to manipulate the token\u2019s price (via an oracle) so they can mint unlimited tokens. The report correctly calls out vulnerabilities in the mint function \u2013 identifying issues with oracle price manipulation (#1), lack of slippage checks (#2), and related business logic (#3) \u2013 which map to the main flaw in the ground truth. However, it also flags additional issues in the flashLoan function (reentrancy, flashLoan business logic, and access control \u2013 #4, #5, #6), which were not part of the ground truth, and it does not explicitly connect the flashloan mechanism as a tool for price manipulation. Thus, while the core vulnerability is identified, the report includes extra findings not mentioned in the ground truth and misses an explicit connection between flashloans and price manipulation.",
      "evaluation_method": "llm"
    },
    "boundary_condition": {
      "category": "boundary_condition",
      "file": "boundary_condition.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 12,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The report failed to capture the key self-transfer vulnerability described in the ground truth. Instead, it reported a set of other issues (e.g., front-running, reentrancy, etc.) that are not relevant to the primary vulnerability, resulting in 12 false positives and 1 missed (false negative) critical self-transfer issue.",
      "evaluation_method": "llm"
    }
  },
  "claude-3-7-analyzer-o3-mini-rag": {
    "data_structure_security": {
      "category": "data_structure_security",
      "file": "data_structure_security.md",
      "has_errors": true,
      "true_positive": 1,
      "false_positive": 4,
      "false_negative": 0,
      "precision": 0.2,
      "recall": 1.0,
      "f1_score": 0.33333333333333337,
      "analysis": "The ground truth vulnerability is that the second parameter in processRelease is incorrectly parsed from calldata. The report does identify the issue\u2014namely, that the declared address parameter is ignored and the recipient is instead extracted via assembly\u2014effectively capturing the core vulnerability. However, the report also lists four other issues (reentrancy, unchecked low-level calls, denial of service, and redundant business logic checks) that are not part of the ground truth, making them false positives.",
      "evaluation_method": "llm"
    },
    "privacy_crypto_security": {
      "category": "privacy_crypto_security",
      "file": "privacy_crypto_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 6,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The ground truth highlights a collision attack in the MerkleDrop that would allow an attacker to claim all tokens. The report, however, identifies six issues (front-running, various business logic points, arithmetic, and unchecked low level calls) that do not relate to a collision vulnerability. Therefore, the key vulnerability from the ground truth is completely missed, while six unrelated issues are reported.",
      "evaluation_method": "llm"
    },
    "gas_security": {
      "category": "gas_security",
      "file": "gas_security.md",
      "has_errors": true,
      "true_positive": 1,
      "false_positive": 5,
      "false_negative": 0,
      "precision": 0.16666666666666666,
      "recall": 1.0,
      "f1_score": 0.2857142857142857,
      "analysis": "The report correctly identifies the key vulnerability described in the ground truth\u2014the unbounded loop in distribute() that can lead to gas exhaustion and denial\u2010of\u2010service. However, it also includes five additional issues (access_control, two business_logic items, unchecked_low_level_calls, and front_running) that are not part of the ground truth vulnerability.",
      "evaluation_method": "llm"
    },
    "arithmetic_security": {
      "category": "arithmetic_security",
      "file": "arithmetic_security.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 8,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The ground truth highlights a single issue\u2014a needless division by scale when calculating interest\u2014while the report focuses on eight separate vulnerabilities (price manipulation, reentrancy, unchecked low\u2010level calls, and various business logic concerns) that do not include the arithmetic error described in the ground truth. In other words, none of the reported vulnerabilities match the key issue (the unnecessary division in getCurrentDebt) from the ground truth, resulting in no true positives and one false negative, with all eight reported issues being false positives relative to the ground truth.",
      "evaluation_method": "llm"
    },
    "access_control": {
      "category": "access_control",
      "file": "access_control.md",
      "has_errors": true,
      "true_positive": 2,
      "false_positive": 5,
      "false_negative": 0,
      "precision": 0.2857142857142857,
      "recall": 1.0,
      "f1_score": 0.4444444444444445,
      "analysis": "The ground truth identified that the contract lacks access controls for critical functions (specifically setOwner). The report correctly identifies this issue in vulnerabilities #1 and #2. However, the report also includes several other vulnerabilities (denial of service, business logic issues, bad randomness, front running) that are not mentioned in the ground truth. Thus, while the key vulnerability is correctly reported (twice), there are five additional (false positive) items, and no ground truth vulnerabilities were missed.",
      "evaluation_method": "llm"
    },
    "cryptoeconomic_security": {
      "category": "cryptoeconomic_security",
      "file": "cryptoeconomic_security.md",
      "has_errors": true,
      "true_positive": 1,
      "false_positive": 5,
      "false_negative": 0,
      "precision": 0.16666666666666666,
      "recall": 1.0,
      "f1_score": 0.2857142857142857,
      "analysis": "The ground truth vulnerability describes a flashloan attack that manipulates the token price and enables minting of unlimited tokens. The report correctly identifies this under vulnerability #2 (price_manipulation), which directly matches the ground truth. However, the report also details five additional vulnerabilities (business_logic issues with mint and flashLoan, no_slippage_limit_check, a second business_logic issue, and a reentrancy concern) that were not mentioned in the ground truth. Thus, while the key vulnerability is correctly identified, the report includes several extra findings.",
      "evaluation_method": "llm"
    },
    "boundary_condition": {
      "category": "boundary_condition",
      "file": "boundary_condition.md",
      "has_errors": true,
      "true_positive": 0,
      "false_positive": 2,
      "false_negative": 1,
      "precision": 0.0,
      "recall": 0.0,
      "f1_score": 0,
      "analysis": "The report did not identify the critical self-transfer vulnerability in the _transfer function described in the ground truth. Instead, it identified two issues related to the approve function and its associated front-running vulnerability which are not present in the ground truth. The actual vulnerability of users inflating balances by transferring tokens to themselves was completely missed.",
      "evaluation_method": "llm"
    }
  },
  "claude-3-7-analyzer-o3-mini-no-rag": {}
}